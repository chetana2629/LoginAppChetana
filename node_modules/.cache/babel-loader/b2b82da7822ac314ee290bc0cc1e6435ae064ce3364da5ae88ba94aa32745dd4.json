{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheta\\\\OneDrive\\\\Documents\\\\Desktop\\\\LoginPage\\\\loginpageapp\\\\src\\\\Componets\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [input, setInput] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevents page refresh on form submission\n\n    // Process form data (for now, just log it to the console)\n    console.log('Form submitted with data:', input);\n\n    // You could send the form data to an API like this:\n    // axios.post('your-api-endpoint', input)\n    //   .then(response => console.log(response))\n    //   .catch(error => console.error('Error submitting the form', error));\n\n    // Clear the form (optional)\n    setInput({\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bxs-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"name\",\n              value: input.name,\n              onChange: handleChange,\n              type: \"text\",\n              placeholder: \"Enter your username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bxs-envelope\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              value: input.email,\n              onChange: handleChange,\n              type: \"email\",\n              placeholder: \"Enter your email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bxs-lock-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              value: input.password,\n              onChange: handleChange,\n              type: \"password\",\n              placeholder: \"Enter your password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"XLxPI6r1S643V0/LoUbNCMXQpAw=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","input","setInput","name","email","password","handleChange","e","target","value","handleSubmit","preventDefault","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/cheta/OneDrive/Documents/Desktop/LoginPage/loginpageapp/src/Componets/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Register.css';\r\n\r\nconst Register = () => {\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevents page refresh on form submission\r\n\r\n    // Process form data (for now, just log it to the console)\r\n    console.log('Form submitted with data:', input);\r\n\r\n    // You could send the form data to an API like this:\r\n    // axios.post('your-api-endpoint', input)\r\n    //   .then(response => console.log(response))\r\n    //   .catch(error => console.error('Error submitting the form', error));\r\n\r\n    // Clear the form (optional)\r\n    setInput({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"wrapper\">\r\n          <h2>Register</h2>\r\n\r\n          {/* Form with onSubmit */}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-box\">\r\n              {/* User icon */}\r\n              <i className='bx bxs-user'></i>\r\n              <input \r\n                name=\"name\"\r\n                value={input.name}\r\n                onChange={handleChange}\r\n                type=\"text\" \r\n                placeholder=\"Enter your username\" \r\n                required\r\n              />\r\n              <br /><br />\r\n\r\n              {/* Email icon */}\r\n              <i className='bx bxs-envelope'></i>\r\n              <input \r\n                name=\"email\"\r\n                value={input.email}\r\n                onChange={handleChange}\r\n                type=\"email\" \r\n                placeholder=\"Enter your email\" \r\n                required\r\n              />\r\n              <br /><br />\r\n\r\n              {/* Lock icon */}\r\n              <i className='bx bxs-lock-alt'></i>\r\n              <input \r\n                name=\"password\"\r\n                value={input.password}\r\n                onChange={handleChange}\r\n                type=\"password\" \r\n                placeholder=\"Enter your password\" \r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\">Submit</button> {/* Button triggers handleSubmit */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}